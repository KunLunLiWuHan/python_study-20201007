# 列表的方法
stus = ['孙悟空', '猪八戒', '沙和尚']

# append()
# 向列表的最后添加一个元素
stus.append('唐僧')
# 输出：['孙悟空', '猪八戒', '沙和尚', '唐僧']
print(stus)

# insert()
# 向列表的指定位置插入一个元素
# 参数：
#   1.要插入的位置
#   2.要插入的元素
"""
1、insert()
向列表的指定位置插入一个元素。
    参数：
      1.要插入的位置
      2.要插入的元素
"""
stus = ['孙悟空', '猪八戒', '沙和尚']
stus.insert(2, '唐僧')
# 输出：['孙悟空', '猪八戒', '唐僧', '沙和尚']
print(stus)

# 使用新的序列来扩展当前序列
# 需要一个序列作为参数，它会将该序列中的元素添加到当前列表中
"""
1、extend()
    使用新的序列来扩展当前序列
    需要一个序列作为参数，它会将该序列中的元素添加到当前列表中
"""
stus = ['孙悟空', '猪八戒']
stus.extend(['唐僧', '白骨精'])
# 输出：['孙悟空', '猪八戒', '唐僧', '白骨精']
print(stus)

# 清空序列
# stus.clear()
# 输出：[]
# print(stus)

"""
1、pop()
    根据索引删除并返回被删除的元素
"""
result = stus.pop(2)  # 删除索引为2的元素
print('result =', result)
result = stus.pop()  # 删除最后一个
print('result =', result)

"""
remove()
删除指定值得元素，如果相同值得元素有多个，只会删除第一个
"""
stus.remove('猪八戒')

"""
reverse()反转列表.
"""
stus = ['孙悟空', '猪八戒', '沙和尚']
stus.reverse()
# 输出：['沙和尚', '猪八戒', '孙悟空']
print(stus)

"""
1、sort()
    用来对列表中的元素进行排序，默认是升序排列。
    如果需要降序排列，则需要传递一个reverse=True作为参数。
"""
my_list = [10, 1, 20, 3, 0, -2]
# my_list.sort()表示降序排序
my_list.sort(reverse=True)
# 输出：[20, 10, 3, 1, 0, -2]
print(my_list)
